version: '3.3'

services:
  backend:
    build:
      context: M7011E-
    restart: always
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=m7011e_backend
      - DB_USER=admin
      - DB_PASS=${POSTGRES_PASS}
      - FRONTEND_IP=${NET_FRONTEND}
      - SIMULATION_IP=${NET_SIMULATION}
    depends_on:
      - db
    networks:
      m7011e_net:
        ipv4_address: ${NET_BACKEND}

  backend-proxy:
    build:
      context: M7011E-Backend/proxy
    restart: always
    depends_on:
      - backend
    ports:
      - 7999:8000
    volumes:
      - static-data:/vol/static

  simulation:
    build:
      context: M7011E-Simulation
    restart: always
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=1
      - BACKEND_IP=${NET_BACKEND}
      - FRONTEND_IP={NET_FRONTEND}
    depends_on:
      - backend
    networks:
      m7011e_net:
        ipv4_address: ${NET_SIMULATION}

  simulation-proxy:
    build:
      context: M7011E-Simulation/proxy
    restart: always
    depends_on:
      - simulation
    ports:
      - 8000:8000

  frontend:
    build:
      args:
        REACT_APP_AUTH_TOKEN_SECRET_PHRASE: ${REACT_APP_AUTH_TOKEN_SECRET_PHRASE}
        REACT_APP_BACKEND_IP: ${NET_BACKEND}
        REACT_APP_SIMULATION_IP: ${NET_FRONTEND}
      context: M7011E-Frontend
    ports:
      - 80:80   # LEFT = HOST, RIGHT = CONTAINER
    depends_on:
      - backend
      - simulation
    networks:
      m7011e_net:
        ipv4_address: ${NET_FRONTEND}

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=m7011e_backend
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    networks:
      - m7011e_net
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  m7011e_net:
    ipam:
      driver: default
      config:
        - subnet: ${NET_SUBNET}